※欠番が存在する理由につきましては、出題自体を公開終了した問題が欠番となっております。

--------------------------------------------- D001　※欠番 ◆
# D001 ◆
# D002　数の比較
# utf-8
a,b = input().rstrip().split()
if int(a) > int(b):
    print(a)
elif int(b) > int(a):
    print(b)
else:
    print("eq")
		
# D003 掛け算のリスト
# utf-8
n = int(input())
print(*[n * i for i in range(1,10)])

# D004 文字列の結合
# utf-8
s = int(input())
print("Hello ", end="")
for i in range(s-1):
    ns = input()
    print(ns + ",", end="")
ns = input()
print(ns + ".")

# D005 等差数列
# utf-8
import numpy as np
a,b = map(int, input().split())
arr = np.arange(a, (a+b*10), b)
print(*arr)

# D006 単位の計算
# utf-8
'''
1km = 1000m
1m = 100cm
1cm = 10mm
'''
n,s = input().rstrip().split()

if s == "km":
    print(int(n)*1000*100*10)
elif s == "m":
    print(int(n)*100*10)
elif s == "cm":
    print(int(n)*10)
else:
    print()

# D007 N倍の文字列
# utf-8
n = int(input())
print("*" * n)

# D008 奇数か偶数か
# utf-8
i = int(input())

if i % 2 == 0:
    print("even")
else:
    print("odd")

# D009 西暦の計算
# utf-8
a,b = input().rstrip().split()
print(int(b) - int(a))

# D010 Eメールアドレス
# utf-8
s = input()
t = input()
print(s+"@"+t) 
--------------------------------------------- D011　※欠番 ◆
# D011 アルファベットで何番目
# utf-8
import string
alphabets = string.ascii_uppercase
# ABCDEFGHIJKLMNOPQRSTUVWXYZ
# ?は何番目のインデックスか
print(alphabets.index(input())+1)

# D012 絶対値を求めよ
# utf-8
s = int(input())
if s >= 0:
    print(s)
else:
    print((-1)*s)

# D013 割り算
# utf-8
m,n = input().rstrip().split()
a = int(m)//int(n)
b = int(m)%int(n)
print(a,b)

# D014 小文字を大文字に
# utf-8
text = input()
print(text.upper())

# D015 カウントダウン
# utf-8
n = int(input())
for i in range(n, 0, -1):
    print(i)

# D016 N文字目まで出力
# utf-8
abc = input()
n = int(input())
print(abc[:n])

# D017 最大と最小
# utf-8
num_1 = int(input())
num_2 = int(input())
num_3 = int(input())
num_4 = int(input())
num_5 = int(input())

print(max(num_1,num_2,num_3,num_4,num_5)) # 最大値
print(min(num_1,num_2,num_3,num_4,num_5)) # 最小値

# D018 ◆

# D019 文字列からN番目
# utf-8
a,b = input().split()
print(a[int(b)-1])

# D020 ◆
--------------------------------------------- D021　※欠番 ◆
# D021 文字列の一致
# utf-8
S = input().split()
T = input().split()

if S == T:
    print("Yes")
else:
    print("No")

# D022 表面積の計算
# utf-8
a = int(input())
print(6* a**2)

# D023 Aの個数
# utf-8
s = input()
print(s.count('A')) # 文字列に含まれるAの数をカウント

# D024 三角形の内角の和
# utf-8
a = int(input())
b = int(input())

nokori = 180-(a+b)
print(nokori)

# D025 数字の出力
# utf-8
n = str(input())

if len(n) == 1:
    print("00" + n)
elif len(n) == 2:
    print("0" + n)
else:
    print()
    
# D026 一週間の予定
# utf-8
n1 = input()
n2 = input()
n3 = input()
n4 = input()
n5 = input()
n6 = input()
n7 = input()

print((n1,n2,n3,n4,n5,n6,n7).count("no"))

# D027 nまでの和
# utf-8
s = int(input())
sum = (s*(s+1))//2
print(sum)

# D028 数字の桁数
# utf-8
s = int(input())
print(len(str(s)))

# D029 サイコロの裏面
# utf-8
s = int(input())
print(7-s)

# D030 ◆
--------------------------------------------- D031　※欠番 ◆
# D031 分から秒へ
# utf-8
min = int(input())
sec = min * 60
print(sec)

# D032 充電時間
# utf-8
s = int(input())
v = 100 - s
print(v)

# D033 頭文字
# utf-8
name = input().split()
list = []
for i in name:
    cap_name = i.capitalize()
    list.append(cap_name[0])
    
print('.'.join(list))

# D034 どれにしようかな
# utf-8
m = int(input()) # 到着するメニューの順番
if 21%m != 0:
    print(21%m)
else:
    print(m)

# D035 日付のデータ
# utf-8
y,m,d = input().rstrip().split()
print(str(y)+"/"+str(m)+"/"+str(d))

# D036 アットマーク
# utf-8
S = str(input()) # 文字列S
# atを@に全置換
S_2 = S.replace("at","@")
print(S_2)

# D037 花粉症でつらい
# utf-8
m = int(input())
n = int(input())

if n%m == 0:
    print(n//m)
else:
    print((n//m)+1)

# D038 試合の回数
# utf-8
player = int(input())
game = (player*(player-1)) //2
print(game)

# D039 正三角形かどうか
# utf-8
a = int(input())
b = int(input())
c = int(input())

if a == b and a == c:
    print("YES")
elif b == c and b == a:
    print("YES")
elif c == a and c == b:
    print("YES")
else:
    print("NO")

# D040 連休の天気
# utf-8
count = 0
for i in range(7):
    input_num = int(input())
    if (input_num <= 30):
        # 湿度30%以下
        count += 1
print(count)
--------------------------------------------- D041　※欠番 ◆
# D041 本棚選び
# utf-8
n,d,e = input().rstrip().split()

if int(n) <= int(d) * int(e):
    print("OK")
else:
    print("NG")

# D042 行列
# utf-8
n1,n2 = input().rstrip().split()
n3,n4 = input().rstrip().split()

gyouretsushiki = (int(n1)*int(n4)) - (int(n2)*int(n3))
print(gyouretsushiki)

# D043 天気の表示
# utf-8
percent = int(input())
if percent <= 30:
    print("sunny")
elif percent <= 70:
    print("cloudy")
elif percent <= 100:
    print("rainy")

# D044 はじめまして
# utf-8
s1,s2 = input().rstrip().split()
if s2 == "M":
    print("Hi, Mr. " + str(s1))
elif s2 == "F":
    print("Hi, Ms. " + str(s1))
else:
    print()
    
# D045 通知票
# utf-8
n = int(input())
if n == 5:
    print(str("A"))
elif n == 4:
    print(str("B"))
elif n == 3:
    print(str("C"))
elif n == 2:
    print(str("D"))
elif n == 1:
    print(str("E"))
else:
    print()

# D046 不思議なタマゴ
# utf-8
a,b,c = input().rstrip().split()
print(max(a,b,c))

# D047 メダリストの表示    
# utf-8
line1 = input()
line2 = input()
line3 = input()

print("Gold", line1)
print("Silver", line2)
print("Bronze", line3)

# D048 台風の間隔
# utf-8
l = []
while True:
    try:
        l.append(int(input().strip()))
    except EOFError:
        break
    
# for i in range(l, len(l)):
#    print(l[i] - l[i-1])
for i,o in enumerate(l):
    if i == 0:
        continue
    print(l[i]-l[i-1])

# D049 〇〇の秋
# utf-8
S = str(input())
if "noaki" in S:
    print(S[:-5])
else:
    print(S)

# D050 お月見だんご
# utf-8
S = input().rstrip().split(" ")
n1 = int(s[0])
n2 = int(s[1])

if n1 > 5:
    n1 = 5

if n2 > 5:
    n2 = 5
    
print(n1 + n2)
--------------------------------------------- D051　※欠番 ◆
# D051 衣替え
# utf-8
# 夏物S,冬物W
# 10着のうち冬物5着以上でOK

C = input().rstrip().split()
W = C.count("W")
S = C.count("S")

if int(W) >= S:
    print("OK")
else:
    print("NG")
    
# D052 ピラミッドの作り方
# utf-8
n = int(input())
sum = n*(n+1)//2
print(sum)

# D053 トリック・オア・トリート
# utf-8
s = input().split()
ans = "Thanks!" if s == "chocolate" or s == "candy" else "No!"
print(ans)

# D054 11/11
# utf-8
n = len(str(input().split()))
ans = "OK" if n >= 11 else 11 - n
print(ans)

# D055 ワインのキャッチコピー
# utf-8
line = input()
print("Best in " + line)

# D056 かまくらづくり
# utf-8
r_1,r_2 = input().rstrip().split()
print(int(r_1)**3 - int(r_2)**3)

# D057 プレゼント選び
# utf-8
n = int(input())
s = input().strip().split("")
print(s[n-1])

# D058 初詣で
# utf-8
s = input().split("")
n1 = int(s[0])
n2 = int(s[1])
n3 = int(s[2])
print("A" * n1 + "B" * n2 + "A" * n3)

# D059 トランプ占い
# utf-8
s = input().strip().split("")
if s[0] == "J" and s[0] == s[1]:
    s[1] = "Q"
print("{0}{1}".format(s[0],s[1]))

# D060 AボタンとBボタン
# utf-8
a,b = input().rstrip().split()
print(int(a)-int(b))
--------------------------------------------- D061　※欠番 ◆
# D061 3倍返し?
# utf-8
choco = int(input())

if choco >= 1:
    print(choco*3)
else:
    print(1)

# D062 ひな祭り
# utf-8
s = input().strip().split(" ")
s = list(map(int, s))  # 数値変換
hina = "ABCDEFGHIJ"
print(hina[:s[0]])
print(hina[s[0]:(s[0] + s[1])])
print(hina[(s[0] + s[1]):])

# D063 ◆

# D064 嘘つきの日
# utf-8
s = input().strip()
ans = s.replace('False', 'True')
print(ans)

# D065 エラーコードの分類
# utf-8
s = int(input())
n = int(s / 100)
ans = "unknown"
if n == 2:
    ans = "ok"
elif n == 4:
    ans = "error"
print(ans)

# D066 スタミナの計算
s = input().strip().split(" ")
n1 = int(s[0])
n2 = int(s[1])

ans = "No" if n2-n1 < 0 else n2-n1
print(ans)

# D067 スイッチのオンオフ
# utf-8
switch = int(input())
if switch % 2 == 1:
    print("ON")
else:
    print("OFF")

# D068 雨と晴れの記録
n = int(input())
s = input().strip()
a1 = 0
a2 = 0
for i in range(n):
    if s[i] == "S":
        a1 += 1
    else:
        a2 += 1
print("{0} {1}".format(a1, a2))

# D069 割り切れない平均点
# utf-8
s = input().strip().split(" ")
s = list(map(int, s))  # 数値変換
print(round(sum(s) / len(s), 1))

# D070 残りのページ
# utf-8
m,n = input().split()
print(int(m) - int(n))
--------------------------------------------- D071　※欠番 ◆
# D071 洗濯物と砂ぼこり
# utf-8
t,m = input().rstrip().split() # 気温,湿度

if (int(t) >= 25) or (int(m) <= 40):
    result = "Yes"
elif (int(t) >= 25) and (int(m) <= 40):
    result = "No"
else:
    result = "No"
print(result)

# D072 データのバックアップ
# utf-8
import math
s = input().strip().split(" ")
# 数値変換 map関数で入力数値sにint型を適用しリストにした
n = list(map(itn,s))
print(math.ceil(n[0]/n[1]*n[2]) # math.ceilでx/y以上の最小の数値を表示

# D073 文字の反転
# utf-8
s = input().strip()
print(s[::-1])

# D074 時間の表記    
# utf-8
time = int(input())
if time % 24 == 1:
    print(1)
elif time % 24 == 2 :
    print(2)
elif time % 24 == 3:
    print(3)
elif time % 24 == 4:
    print(4)
elif time % 24 == 5:
    print(5)
elif time % 24 == 6:
    print(6)
elif time % 24 == 7:
    print(7)
elif time % 24 == 8:
    print(8)
elif time % 24 == 9:
    print(9)
elif time % 24 == 10:
    print(10)
elif time % 24 == 11:
    print(11)
elif time % 24 == 12:
    print(12)
elif time % 24 == 13:
    print(13)
elif time % 24 == 14:
    print(14)
elif time % 24 == 15:
    print(15)
elif time % 24 == 16:
    print(16)
elif time % 24 == 17:
    print(17)
elif time % 24 == 18:
    print(18)
elif time % 24 == 19:
    print(19)
elif time % 24 == 20:
    print(20)
elif time % 24 == 21:
    print(21)
elif time % 24 == 22:
    print(22)
elif time % 24 == 23:
    print(23)
else:
    print(0)

# D075  足りないカード
# utf-8
card_1 = int(input())
card_2 = int(input())
card_3 = int(input())
card_4 = int(input())

card_total = card_1 + card_2 + card_3 + card_4
last_card = (1+2+3+4+5) - card_total
print(last_card)

# D076 禁止ワード
# utf-8
W = str(input()) # 禁止ワード
S = str(input()) # 判定文字列

# SにWが含まれる場合"NG",それ以外は文字列Sをそのまま出力

if W in S:
    print("NG")
else:
    print(S)
    
# D077 計算機の表示
# utf-8
a,b = input().split()
if int(a)*int(b) < 10000:
    print(int(a) * int(b))
else:
    print("NG")

# D078 入学試験
# 7科目100点満点のテスト　平均点が合格点以上で合格
a_1,a_2,a_3,a_4,a_5,a_6,a_7 = input().rstrip().split() # 7科目の点数
X = int(input()) # 合格点

Ave = (int(a_1)+int(a_2)+int(a_3)+int(a_4)+int(a_5)+int(a_6)+int(a_7))//7

if Ave >= X:
    print("pass") # 合格
else:
    print("failure") # 不合格
    
# D079 同じ文字
# utf-8
a = input()
b = len(set(a)) 
if b ==1:
    print("NG")
else:
    print("OK")

# D080 忘年会の予算
# utf-8
n,m = input().rstrip().split()
print((6000*int(n))+(4000*int(m)))
--------------------------------------------- D081　※欠番 ◆
# D081 家族で分ける
# utf-8
N = int(input()) # 家族の人数
H,W = input().rstrip().split() # 縦の数,横の数

J = (int(H)*int(W))%int(N) # 剰余
print(J)

# D082 2つの単語
# utf-8
A = str(input()) # しりとりで先に出た単語
B = str(input()) # しりとりで次に出た単語

if str(B[-1]) == "n":
    print("NG")
elif str(A[-1]) == str(B[0]):
    print("OK")
else:
    print()

# D083 ブラックジャック
# utf-8
s = input().rstrip().split(' ')
s = list(map(int, s))  # 数値変換
n = sum(s)

print("HIT" if n < 16 else "STAND")

# D084 英語で何月？
# utf-8
s = input()
d = {1: "January", 2: "February", 3: "March", 4: "April", 5: "May",
     6: "June", 7: "July", 8: "August", 9: "September", 10: "October",
     11: "November", 12: "December"}

val = d[int(s)]
print(val)

# D085 ◆

# D086 門松の作成    
# utf-8
cut = int(input())
print(cut * 5)

# D087 文字をくっつける
# utf-8
n = int(input())
str_list = []
while True:
    try:
        buf = input()
        if buf:
            str_list.append(buf)
    except EOFError:
        break

for item in str_list:
    print(item, end='')

# D088 温度差の計算
# utf-8
t,u = input().rstrip().split()
print(int(t) - int(u))

# D089 数字の取得
# utf-8
import re
nS =input()
numbers = re.sub(r'[^0-9]', '', nS)
print(numbers)

# D090 下一桁はいくつ
# utf-8
s = input().rstrip().split(' ')
s = list(map(int, s))  # 数値変換
n = sum(s)
print(str(n)[-1])
---------------------------------------------D091　※欠番 ◆
# D091 花粉の予想
# utf-8
s = input().rstrip().split(' ')
print(s.count('1') + s.count('2'))

# D092 花見の準備
# utf-8
x1,y1,p1 = input().rstrip().split() # レジャーシートの横の長さ,縦の長さ,価格
x2,y2,p2 = input().rstrip().split() # レジャーシートの横の長さ,縦の長さ,価格

price1 = int(p1)/(int(x1)*int(y1)) # レジャーシート1の価格
price2 = int(p2)/(int(x2)*int(y2)) # レジャーシート2の価格

if price1 > price2:
    print(x2,y2,p2)
elif price1 == price2:
    print("DRAW")
else:
    print(x1,y1,p1)

# D093 切りの良い番号
# utf-8
n = int(input())
if n == 9999:
    print(9999)
elif n == 8888:
    print(8888)
elif n == 7777:
    print(7777)
elif n == 6666:
    print(6666)
elif n == 5555:
    print(5555)
elif n == 4444:
    print(4444)
elif n == 3333:
    print(3333)
elif n == 2222:
    print(2222)
elif n == 1111:
    print(1111)
else:
    print(n)

# D094 犬派か猫派か
# utf-8
# coding: utf-8
s = []
for i in range(3):
    s.append(input())

print("cat" if s.count("cat") > s.count("dog") else "dog")

# D095 ジュースの分配
# utf-8
n = int(input())
m = int(input())

print(n//m)

# D096 含んではいけない文字
# utf-8
s = input()

if 'I' in s or 'i' in s or 'l' in s:
    print("caution")
else:
    print(s)
    
# D097 梅雨入りの予想
# utf-8
s = input().rstrip().split(' ')

print("yes" if s.count('1') >= 5 else "no")

# D098 ボーナスの計算
# utf-8
kyuyo,keisuu = input().rstrip().split()
bonus = int(kyuyo)*int(keisuu)
print(bonus)

# D099 短冊づくり
# utf-8
s = input()
for i in range(len(s)):
    print(s[i])

# D100 区切り文字の統一
s = input()
c1 = s.count('-')
c2 = s.count('_')
if c1 < c2 or c1 == c2:
    s = s.replace('-', '_')
else:
    s = s.replace('_', '-')

print(s)
---------------------------------------------D101　※欠番 ◆
# D101 偶数派と奇数派
# utf-8
s = input().rstrip().split(' ')

a = int(s[0]) % 2
b = int(s[1]) % 2

if a + b == 1:
    print("YES")
else:
    print("NO")

# D102 運賃の計算
# utf-8
kukan = int(input())
unchin = (kukan*10)+100
print(unchin)

# D103 逆さ読み
# utf-8
s = input()
print(s[::-1])

# D104 送料の計算
# utf-8
n = int(input())
print(1000 if n < 10 else 150*n)

# D105 長さの一致
# utf-8
s_1 = input()
s_2 = input()

if len(s_1) == len(s_2):
    print("Yes")
else:
    print("No")

# D106 割った余り
# utf-8
N = int(input())
M = int(input())
print(N % M)

# D107 文字列を囲う
# utf-8
S = input()
C = input()
print(C+S+C)

# D108 薬の効き目
# utf-8
import math
n = int(input())
print(str(math.ceil(24 / n)))

# D109 ゾロ目の日付
# utf-8
def main():
    date = input().replace(' ', '')
    if len(set(date)) == 1:
        print('Yes')
    else:
        print('No')

main()

# D110 3つの数字
# utf-8
a,b,c = input().rstrip().split()
print(int(a)*int(b)*int(c))

---------------------------------------------D111　※欠番 ◆
# D111 文字を切り詰める
# utf-8
n = int(input())
S = input()
print(S[:n])

# D112 工場の生産力
# utf-8
n = int(input())
h = int(input())
day = n * h
print(day)

# D113 初日の出
# utf-8
t = input().strip().split(":")
t = list(map(int, t))   # int変換

x = t[0] - 8

if x < 0:
    x = 24 + x

print(str(x) + ":" + str(t[1]))

# D114 税込の価格
# 消費税a%で税抜き価格b円の買い物をした
# 税込み価格を求める(小数点以下切り捨て)
# utf-8
import math
a,b = input().rstrip().split()

N = int(b)*(1 + int(a)/100)

print(math.floor(N))

# D115 おかしの二等分
# utf-8
okasi = int(input())
A = okasi // 2
print(A)

# D116 サービス料金
# あるお店では、お会計の金額の下二桁、100 円未満の部分を割引サービスしています。
# 割引前のお会計の金額が与えられるので、割引後の金額を出力してください。
# utf-8
x = input() # 会計金額
if int(x) < 1000:
    print(x)
else:
    print(int(x)-(int(x)%100)) # 元の数から(元の数を100で割った剰余)を引く

# D117 すごろくのサイコロ
# utf-8
N = int(input())
print(sum(map(int, input().split())))

# D118 こよみの変換
# utf-8
S = str(input()) # 和暦の"S"(昭和)または"H"(平成)
N = int(input()) # 和暦何年

# 和歴を西暦に変換
# 昭和 1926～1989 昭和64年
# 平成 1989～2019 平成31年

if S == "S": # 昭和の時
    print(1925 + N)
elif S == "H": # 平成の時
    print(1988 + N)
else:
    print()
    
# D119 円周率の日
# utf-8
s = "3."
t = "141592653589793"
i = int(input())
print(s+t[:i])

# D120 鉛筆の数
# utf-8
dars = int(input())
total = dars * 12
print(total)
---------------------------------------------D121　※欠番 ◆
# D121 AからRへ
# utf-8
X = str(input())
if "A" in X:
    print(X.replace("A","R")) # 文字列の置換
else:
    print(X)

# D122　足して0になる数
# utf-8
n = int(input())
if n == 0:
    print(0)
else:
    print(n * (-1))

# D123 自動でチャージ
# utf-8
cash = int(input())
if cash < 10000:
    print(cash + 10000)
else:
    print(cash)

# D124 あと何日
# utf-8
t = int(input())

s = t // 24

if s <= 1:
    print(1)
elif s <= 2:
    print(2)
elif s <= 3:
    print(3)
elif s <= 4:
    print(4)
else:
    print(5)

# D125 万歩計
# utf-8
N = int(input())
print(sum([int(input()) for _ in range(N)])//N)

# D126 点数の計算
# utf-8
C,T,A = input().rstrip().split()
print(int(C) +int(T) + int(A))

# D127 座席番号のくじ
# utf-8
S = input()
 
if "111" in S:
    print("Yes")
elif "222" in S:
    print("Yes")
elif "333" in S:
    print("Yes")
elif "444" in S:
    print("Yes")
elif "555" in S:
    print("Yes")
elif "666" in S:
    print("Yes")
elif "777" in S:
    print("Yes")
elif "888" in S:
    print("Yes")
elif "999" in S:
    print("Yes")
elif "000" in S:
    print("Yes")
else:
    print("No")
    
# D128 略語の生成
# utf-8
N = int(input())
S = [n[0] for n in input().split()]

print(''.join(S))

# D129 税率の変更
# utf-8
p,x,y = input().rstrip().split() # 商品価格,旧税率,新税率

S = ((int(y)-int(x))*int(p))//100
print(S)

# D130 ◆
---------------------------------------------D131　※欠番 ◆
# D131 脱出ゲーム
# utf-8
S = str(input()) # 0,1,2からなる文字列
print(S.replace("0","C").replace("1","A").replace("2","B")) # 文字列一括置換

# D132 N回ゲーム
# utf-8
n = int(input())
S = str(input())

print(S*n)

# D133 株の利益
# utf-8
X = int(input()) # 元手となる資金額 〇円分の株
A = int(input()) # 上昇前の１単位当たりの株価　Xをいくらで買ったか
B = int(input()) # 上昇後の１単位当たりの株価　Xをいくらで売ったか

# あなたは、X 円の資金を元に株式投資を始めようと思っています。
# 株価の上昇が見込めそうな銘柄を見つけたので、全財産を投じ買えるだけ買って株価が上がったら売ろうと考えました。
# 上昇前の株価 A 円と上昇後の株価 B 円が与えられるので、いくら利益を上げることができたか計算。
# 株は１単位ごとにしか購入できない
# 100円分で50単位
# 求めるもの　投資の利益

print((X//A) *(B-A))

# D134 タイトルの長さ
# utf-8
S = input()
if len(S) >= 10:
    print(S[0:10])
    print(S[10:])
else:
    print(S[:])

# D135 多角形の調査
# utf-8
D = int(input())       # n角形の内角の和
N = int(D//180) + 2    # n角形か
print(N)

# D136 空港の呼称
# utf-8
s = input()
print(s[:3])

# D137 契約の交渉
# utf-8
s = input()
print(s.count("y"))

# D138 おうむ返し
# utf-8
m,n = [int(x) for x in input().rstrip().split()]
ss = [input() for _ in range(n)]
for s in ss:
    print(s)

# D139 少ない方の勝ち
# utf-8
n = int(input())
line = input().rstrip().split()

if line.count("G") > line.count("P"):
    print("P")
elif line.count("G") == line.count("P"):
    print("Draw")
else:
    print()

# D140 N番目の単語
# utf-8
N = int(input()) # 1~10の整数
from sys import stdin
S = stdin.readline().split() # 区切り
print(S[N-1]) # n単語目 0スタート
---------------------------------------------D141　※欠番 ◆
# D141 縦書きと横書き
# utf-8
n = int(input())
names = [input() for _ in range(n)]
print(*names)

# D142 イルミネーションの数
# utf-8
n,x,y = input().split() # 木の数, 電飾間隔, 1本の木に必要な電球の数
z = round(int(n)/int(x),0) # 小数点以下0桁に丸める 7÷2 =3.5 ≒4
print(int(z)*int(y))

# D143 制動距離の計算
# 制動距離:ブレーキをかけてから停止するまで車が進む距離 ※ただし摩擦は無視する
# 制動距離L
# 自動車の質量m
# ブレーキをかけ始めた時の自動車の速度v
# ブレーキ強度f
# L = m*(v**2)//(2*f)
# utf-8
m,v,f = input().rstrip().split()

L = int(m)*(int(v)**2)//(2*int(f))
print(L)

# D144 5桁の数字
# utf-8
S = input()

T = int(S[0])*(2**4) + int(S[1])*(2**3) + int(S[2])*(2**2) + int(S[3])*(2**1) + int(S[4])*(2**0)
print(T)
# pythonの累乗の記号は**

# D145 ゲームのスタミナ
# utf-8
stamina, shouhi = input().rstrip().split()
print(int(stamina) // int(shouhi))

# D146 単語の省略
# utf-8
remove = 'aeiouAEIOU' # 母音
sentence = str(input()) # 文字列
newsentence = ''.join(s for s in sentence if s not in remove) # 削除について
print(newsentence)

# D147 桶の水量
# utf-8
S = int(input())
A = input().rstrip().split()
B = min(A)
print(S *int(B))

# D148 ある試験の境目
# utf-8
A,B = input().rstrip().split() # 試験1,2の得点
C = input() # 試験1の必要最低点
# AがC以上でないとBの加点なし

if int(A) >= int(C):
    print(int(A)+int(B))
else:
    print(int(A))

# D149 文字のだるま落とし
# utf-8
a = str(input())
b = int(input())
c = a[:b-1]+a[b:]
print(c)

# D150 達成の確認
# utf-8
x = int(input())
y = int(input())

if x > y:
    print("Thank you")
else:
    print(y-x)
---------------------------------------------D151　※欠番 ◆
# D151 お菓子のプレゼント    
# utf-8
s = str(input())
N = int(input())

if s == "chocolate":
    print(int(N)*2)
elif s == "cake":
    print(int(N)*5)
else:
    print()

# D152 部分点
# utf-8
S = str(input()) # 正誤を表す  R正解  W不正解
N = int(input()) # 部分点のために必要な正解数 SのうちRがこの数以上でないとNG

L = S.count("R")

if int(L) < N:
    print("NG")
else:
    print("Yes")

# D153 食材選び
# utf-8
a,b,c = input().rstrip().split()

if a > b:
    a,b = b,a
elif b > c:
    b,c = c,b
elif c > a:
    c,a = a,c

print(b)

# D154 画面の構成
# utf-8
monitor = int(input())
human = int(input())
num = monitor**2

print(num - human)

# D155 入館料の計算
# utf-8
N = int(input()) # 博物館の観光客人数
M,A,B = input().split() #団体料金適用となる最低人数,団体での一人当たりの料金,個人料金
# 求めるもの入館料

if  N >= int(M):
    print(N * int(A))
else:
    print(N * int(B))

# D156 密度の計算
# utf-8
tani_menseki = int(input())
ninzuu = int(input())

total_menseki = tani_menseki * ninzuu
print(total_menseki)

# D157 信号の組み合わせ
# utf-8
signal = int(input())
print(2**signal)

# D158 湿度の確認
# utf-8
moist = int(input())
if 40 <= moist <= 60:
    print("OK")
else:
    print("NG")

# D159 短冊の大きさ
s_1 = str(input())
s_2 = str(input())
s_3 = str(input())

print(max(len(s_1),len(s_2),len(s_3)))

# D160 N合目の高さ
# utf-8
s = input()
t = input()
print(s+"/"+t)
---------------------------------------------D161　※欠番 ◆
# D161 貯水タンク
# utf-8
N = int(input()) # 貯水タンク容量
A_1 = int(input()) # 1日目の降水量
A_2 = int(input())
A_3 = int(input())
A_4 = int(input())
A_5 = int(input())
A_6 = int(input())
A_7 = int(input())

sum = A_1 + A_2 + A_3 + A_4 + A_5 + A_6 + A_7

if sum <= N:
    print(sum)
else:
    print(N)

# D162 お米の重さ
# utf-8
gou = int(input())
total = gou * 150
print(total)

# D163 縦にする
# utf-8
s = input()
for i in range(len(s)):
    print(s[i])

# D164 区切りの良い日
# utf-8
x = int(input()) # 1月1日から何番目の日付か　2の累乗はOK それ以外をNG
if x == 2:
    print("OK")
elif x == 4:
    print("OK")
elif x == 8:
    print("OK")
elif x == 16:
    print("OK")
elif x == 32:
    print("OK")
elif x == 64:
    print("OK")
elif x == 128:
    print("OK")
elif x == 256:
    print("OK")
else:
    print("NG")

# D165 安全な数字
# utf-8
nums = input()
if nums[0] == nums[1]:
    print("NG")
elif nums[0] == nums[2]:
    print("NG")
elif nums[0] == nums[3]:
    print("NG")
elif nums[1] == nums[2]:
    print("NG")
elif nums[1] == nums[3]:
    print("NG")
elif nums[2] == nums[3]:
    print("NG")
else:
    print("OK")

# D166 何日後になるか
# utf-8
s = int(input())
print(s*7)

# D167 買い物袋
# utf-8
s = int(input())
if s >= 1000:
    print(s+3)
else:
    print(s)

# D168 日付の表記
# utf-8
year = input()
month = input()
day = input()
print(month + "/" + day + "/" + year)

# D169 気温の差
# utf-8
M,L = input().rstrip().split()
print(int(M)-int(L))

# D170 校庭マラソン
# utf-8
n = int(input())
m = int(input())
total = n * m
print(total)
---------------------------------------------D171　※欠番 ◆
# D171　数当てゲーム
# utf-8
# あなたが紙に書いた数値 P_1, paizaさんが紙に書いた数値 P_2

P_1,P_2 = input().rstrip().split()
N = int(input()) # 目標の数値
A_1 = int(P_1) - N
A_2 = int(P_2) - N

print(A_1, A_2)

# D172 イヴの日付
# utf-8
num1 = int(input())
num2 = num1 - 1
print(num2)

# D173  単語の入れ替え
# utf-8
s1,s2 = input().rstrip().split()
print(s2,s1)

# D174　栄養の摂取
# utf-8
p = int(input())
print(p*1500)

# D175 12進数
# utf-8
twelve = int(input(),12) # 12進数に変換 (元の記数法,変換後)
print(twelve)

# D176 文字数制限
# utf-8
line = input()
if len(line) <= 20:
    print("OK")
else:
    print("NG")

# D177 通信料の計算
# utf-8
a,n = input().strip().split()
print(int(a)*int(n))

# D178 逆さにする
# utf-8
n = int(input())
S = str(input())
print(S[::-1])

# D179 分け前の計算
# utf-8
m = int(input())
n = int(input())
print(n%m)

# D180 音のうなり
# utf-8
Hz_1, Hz_2 = input().strip().split()
if Hz_1 > Hz_2:
    print(int(Hz_1)-int(Hz_2))
else:
    print(int(Hz_2)-int(Hz_1))
---------------------------------------------D181　※欠番 ◆
# D181 住所の表記 
# utf-8
line1 = input()
line2 = input()
line3 = input()

print(line1, end="-")
print(line2, end="-")
print(line3)

# D182 燃費の計算
# utf-8
input_mile = int(input())
input_oil = int(input())
mile_per_oil = input_mile // input_oil

print(mile_per_oil)

# D183 ◆
# D184 縦に表示
# utf-8
s = int(input())
t = str(input())

for i in range(len(t)):
    print(t[i])

# D185 時給の計算
# utf-8
jikyu = int(input())
jikan = int(input())

kyuyo = jikyu * jikan
print(kyuyo)

# D186 暑さの基準
# utf-8
Temp = int(input())
if 30 <= Temp < 35:
    print("M")
else:
    print(Temp)
    
# D187 曲名の表記
# utf-8
s = input()
t = input()

print(s+"/"+t)

# D188 2枚のカード
# utf-8
a = int(input())
b = int(input())

if a+b ==21:
    print("Win")
else:
    print(a+b)

# D189 何周年の確認
# utf-8
a = int(input())
b = int(input())
   
if b > a:
    print(b-a)
else:
    print()

# D190 センチをミリに
# utf-8
centi = int(input())
mili = centi * 10
print(mili)
---------------------------------------------D191　※欠番 ◆
# D191 体温チェック
# utf-8
n = float(input())
if n < 37.0:
    print("OK")
else:
    print("NG")

# D192 感嘆符の付与
# utf-8
input_line = input()
print(f"{input_line}" + "!")

# D193 電池の本数
# utf-8
n = int(input())
m = int(input())
print(m//n)
print(m%n)

# D194 カロリーの計算
# utf-8
input_gou = input()
kcal = 540

total = int(input_gou) * kcal
print(total)

# D195 ワインの作り方
# utf-8
wine = int(input())
print(wine*1.5)

# D196　パーティーの用意
# utf-8
n = int(input())
p_1 = int(input())
p_2 = int(input())
p_3 = int(input())
s = p_1 + p_2 + p_3
print(s)

# D197 買い物のポイント
# utf-8
s = int(input())
if s >= 1000:
    print(s//10)
else:
    print(0)

# D198 区切って出力
# utf-8
a = int(input())
b = int(input())
print(a,end="")
print("/",end="")
print(b,end="")

# D199 お餅の個数
# utf-8
mochi = input()
number = input()

print(int(mochi)*int(number))

# D200 電気代の計算
# utf-8
kwh = int(input())
nedan = 25
jikan = 24

cost = int(kwh * nedan * jikan)
print(cost)
---------------------------------------------D201　※欠番 ◆
# D201 節分の用意
# utf-8
import sys
s = input()
print(sum(int(s) for s in sys.stdin.read().split()))
# 文字列sを1つ読み込んで数値に替える→改行区切り

# D202 価格の比較
# utf-8
p1,f1 = input().rstrip().split()
p2,f2 = input().rstrip().split()

A = int(p1)+int(f1)
B = int(p2)+int(f2)

if A > B:
    print(B)
else:
    print(A)

# D203 文字のチェック
# utf-8
s = str(input()) # 基準文字列
c = str(input()) # 検索したい文字
n = int(input()) # 何文字目か

p = s.find(c) # cはsの何文字目か

if n == int(p+1): # インデックス0スタートのため調整する
   print("Yes")
else:
    print("No")

# D204 2にする
# utf-8
n = int(input())
print(222-n)

# D205 ◆
# D206 数値の入れ替え
# utf-8
a,b = input().rstrip().split()
a,b = b,a
print(a,b)

# D207 文字列の省略
# utf-8
s = input()
print(s[:3])

# D208 値下げクーポン
# utf-8
x,y = input().rstrip().split()
print(int(x)-int(y))

# D209 数字探し
# utf-8
# 個数を数える数字n
# 文字列s
n = input()
s = input()
print(s.count(n))

# D210 年間の料金
# utf-8
p = int(input())
print(p*12)
---------------------------------------------D211　※欠番 ◆
# D211 飴の余り
# utf-8
n,m = input().rstrip().split() # 飴の数, 子どもの人数
print(int(n)%int(m))

# D212 繋げた長さ
# utf-8
N = int(input())
print(N*10)

# D213 タイプ数の予想
# utf-8
push = int(input())
print(push * 365)

# D214 身長差
# utf-8
a = int(input()) # 兄の身長
b = int(input()) # 弟の身長
# a >= b
print(a-b)

# D215 金庫のパスワード
# utf-8
S = input()
if S == "paiza":
    print("Yes")
else:
    print("No")

# D216 夏休みの課題
# utf-8
a = int(input())
b = int(input())
print(500-a-b)

D217 キャラクターの名前
# utf-8
S = str(input())
print(len(S))

D218　買い物
# utf-8
'''
商品Aの値段　Bの所持金N
'''
N = int(input())

if  N >= 1000:
        print("Yes")
else:
        print("No")

D219　犬猿の仲
# utf-8
S = str(input())
if S == "saru": # inuと犬猿の仲
        print("No")
else:
        print("Yes")

D220　従業員の数
# utf-8
a = int(input())
b = int(input())
print(a+b)
---------------------------------------------D221　※欠番 ◆
# D221 グループ
# utf-8
N = int(input()) # 偶数の生徒人数
# これを2人ペアにする
print(N//2)

# D222　どちらが沢山食べたか
# utf-8
X = int(input()) # Aが食べたラーメン量
Y = int(input()) # Bが食べたラーメン量

if X > Y:
    print(X)
else:
    print(Y)

# D223　新しい呪文
# utf-8
B = input()
C = input()
print(B+C)

# D224　繰り返す
# utf-8
S = input()
print(S*3)

# D225 3つ買う
# utf-8
N = int(input())
print(N*3)

# D226 伸びる身長
# utf-8
N = int(input())
print(170 + N)

# D227 引き落としの手数料
# utf-8
N = int(input())
if N >= 120:
    print(N - 120)
else:
    print()
    
# D228 クリスマスの時間
'''
12 月 25 日の日没の時刻は 24 時間表記で S 時 T 分です。
現在の日時は 24 時間表記で 12 月 25 日 H 時 M 分です。
教会暦では、日没から次の日没までを一日として扱うので、
クリスマスは厳密には 12 月 24 日の日没から 12 月 25 日の日没までです

12 月 25 日の日没の時刻および 25 日の現在の時刻が与えられる→現在時刻H,Mがクリスマスか判定

日没 今
ST   HM
1634 1254 →Yes
1634 1640 →No
1634 1634 →Yes

'''
# utf-8

S,T = input().split() # 12/25の日没時刻 24時間表記  日没時S 日没分T   沈
H,M = input().split() # 12/25の現在時刻 24時間表記 今の時H 今の分M　 今

if int(H) > int(S):# 時が日没を超えたとき
    print("No")
elif int(H) == int(S): # 時は同じ
    if int(M) > int(T): # 時は同じだが分が超えたとき
        print("No")
    elif int(M) == int(T):# 時は同じで分も同じ
        print("Yes")
else: # 時は超えていないとき
    print("Yes")

# D229　どれだけ増えた
# utf-8
weight = int(input())
print(weight-10)

# D230　鞄の合計代金
# utf-8
a = int(input())
b = int(input())
print(a*b)
---------------------------------------------D231　※欠番 ◆
# D231　文字列の2番目
# utf-8
S = str(input())
print(S[1])

# D232　問題集
# utf-8
N = int(input())
print(N*100)

# D233　3人の経験値
# utf-8
a = int(input())
b = int(input())
c = int(input())

print(a+b+c)

# D234　10文字制限のゲーム
# utf-8
S = input()
print(10-len(S))

# D235　5人兄弟
# utf-8
N = int(input())
print(5 * N)

# D236　座面の高さ
# utf-8
n = int(input())
print(n//4)

# D237 フルネーム
# utf-8
S = str(input())
print("paiza" + S)

# D238　飴を分ける
# utf-8
N = int(input())
print(N//10)

# D239　増えるリンゴ
# utf-8
N = int(input())
print(N+10)

# D240　ゲームID
# utf-8
S = input()
print(S + "A")
---------------------------------------------D241　※欠番 ◆
# D241　毎日勉強
# utf-8
N = int(input())
print(N*100)

# D242　取引の計算
# utf-8
x = int(input())
y = int(input())
z = int(input())
total_money = x + y - z

print(total_money)

# D243 会社の募金
# utf-8
X = int(input())
print(X%10)

# D244　村の再開発
'''
A 村にはもともと 100 人の人が住んでいました。
A 村には新しくテーマパークできたため、人口が増加しました。
結果、A 村では人口が毎月 X 人ずつ増加します。Y 月後の A 村の人口はいくらですか？
'''
# utf-8
X = int(input()) # 毎月の人口増加量
Y = int(input()) # A村の経過月数

print(100+(X*Y))

# D245　最後の文字
# utf-8
S = input()
print(S[-1])

# D246　1年後の身長
# utf-8
N = int(input()) # 今の身長
print(N+10)

# D247　顧客ID
# utf-8
S = input()
print(S[0]+S[-1])

# D248　2日間のランニング
# utf-8
A = int(input())
B = int(input())
print(A+B)

# D249　株取引の損益
# utf-8
A = int(input()) # Aが購入した時点の株の価格
B = int(input()) # Aが売却した時点の株の価格

if A > B:
    print("No") # 売却価格が購入価格より低いので損している
else:
    print("Yes") # 売却価格が購入価格より高いので得している

# D250　硬めのラーメン
# utf-8
X = int(input())
print(60-X)

---------------------------------------------D251　※欠番 ◆
# D251　学校の統廃合
# utf-8
X = int(input())
Y = int(input())
print(X+Y)

# D252　日課のランニング
# utf-8
X = int(input())
print(X*4)

# D253　宝くじとかけ金
# utf-8
N = int(input())
print(N**2)

# D254　砲丸投げ
# utf-8
X = int(input())
Y = int(input())

if X > Y:
    print(X-Y)
else:
    print(Y-x)

# D255　学校でのあだな
# utf-8
S = input()
X = input()

print(X+S+X)

# D256　移住
# utf-8
X = int(input()) # A市の人口
Y = int(input()) # B市の人口
# A市からB市に移住
print(X-100)
print(Y+100)

# D257　後ろ文字D
# utf-8
S = input()
if S[-1]=="d":
    print("Yes")
else:
    print("No")

# D258　ショッピングモールの買い物
# utf-8
A = int(input())
B = int(input())
print((A*2)+(B*2))

# D259　5年前の自分
# utf-8
X = int(input())
print(X-5)

# D260　色紙に載せる名前
# utf-8
A = input()
B = input()
if len(A) > len(B):
    print(B)
else:
    print(A)

---------------------------------------------D261　※欠番 ◆
# D261 お菓子作り
# utf-8
n = int(input())
print(n * 13)

# D262　同じ長さ
A = input()
B = input()

if(len(A)==len(B)):
    print("Yes")
else:
    print("No")

# D263　部品の発注
# utf-8
x = int(input()) # 部品の価格
n = int(input()) # 発注量
print(x*n)

# D264　割引価格
# utf-8
p = int(input())
if(p >=1000):
    print(p-100)
else:
    print(p)

# D265　薬の処方
# utf-8
n = int(input()) # 薬の処方日数
m = int(input()) # 朝昼晩それぞれにのむ錠剤の数

print(n*m*3)

# D266　ソフトウェアの名前
# utf-8
S = input()
c = input()
print(S+c)

# D267　カードを配る
# utf-8
# カードの枚数 n 枚、ゲームに参加する人数 m 人、1人に配るカードの枚数 p 枚
n = int(input())
m = int(input())
p = int(input())

print(n-(m*p))

# D268　お菓子のつまみ食い
# utf-8
N = int(input())
a = int(input())
b = int(input())

print(N-a-b)

# D269　呪文の解読
# utf-8
# 文字列の奇数番目を取り出して順に並べて解読するプログラム
S = input().strip()
moji = S[::2]
print(moji)
'''
input() 関数を使用して標準入力から文字列を受け取り、strip() メソッドを使って余分な空白を削除します。
'''

# D270　スカイダイビング
# utf-8
# 入力から年齢制限と体重制限を取得
age_limit, weight_limit = map(int, input().split())

# PAIZA 君の年齢と体重を定数として設定
paiza_age, paiza_weight = 15, 60

# 判定条件を満たしているか確認
if 1 <= age_limit <= 150 and 1 <= weight_limit <= 150 and 1 <= paiza_age <= 150 and 1 <= paiza_weight <= 150:
    # 年齢と体重が条件を満たす場合
    if paiza_age >= age_limit and paiza_weight <= weight_limit:
        print('Yes')  # 参加可能
    else:
        print('No')   # 年齢条件を満たさない場合
else:
    print('条件を満たしていません')  # 入力条件が不正な場合
'''
このPythonコードは、スカイダイビング体験への参加資格が満たされているかどうかを判定するものです。
ユーザーからの入力を受け取り、年齢制限と体重制限をそれぞれage_limitとweight_limitに代入しています。
PAIZA 君の年齢を15歳、体重を60kgと設定しています。これは問題文で与えられた定数です。
入力された制約が1以上150以下の範囲内にあることを確認しています。また、PAIZA 君の年齢と体重も同様に範囲内にあるか確認しています。
PAIZA 君の年齢が年齢制限以上で、かつ体重が体重制限以下である場合、スカイダイビング体験への参加資格があると判定します。
参加資格がある場合は'Yes'、そうでない場合は'No'が出力されます。年齢条件を満たさない場合には'No'が出力されます。入力された条件が1以上150以下の範囲外である場合には'条件を満たしていません'が出力されます。
'''
---------------------------------------------D271　※欠番 ◆
# D271　縄跳び大会
# utf-8
A, B = map(int, input().split()) # 去年の記録A, 今年の記録B
if(B > A):
    print("Yes")
else:
    print("No")
    
# D272　お菓子の重さ
# utf-8
N = int(input())
a = int(input())
print(N*a)

# D273　再来月
# utf-8
M = int(input())
if 1 <= M <= 10:
    print(M+2)
elif M == 11:
    print(1)
elif M == 12:
    print(2)
    
# D274 水の量
# utf-8
N = int(input())
a = int(input())

if a <= N:
    print("Yes")
else:
    print("No")

# D275 服の値段
# utf-8
a = int(input())
b = int(input())
print(a+b)

# D276 カラオケの利用料金
# utf-8
# X: カラオケ店の30分ごとの利用料金
X = int(input())

# M: PAIZA さんのカラオケ店の利用時間
M = int(input())

# PAIZA さんが支払う利用料金を計算する
# 利用時間を30で割って切り上げ、Xをかけることで料金を計算する
payment = ((M + 29) // 30) * X

# 結果を出力
print(payment)
'''
このコードは、与えられたカラオケ利用料金とPAIZAさんの利用時間に基づいて、PAIZAさんが支払う利用料金を計算するものです。
まず、カラオケ店の30分ごとの利用料金を表す整数Xを入力として受け取ります。この値はプログラムの実行時にユーザーが入力します。
次に、PAIZAさんのカラオケ店の利用時間を表す整数Mを入力として受け取ります。これも同様にユーザーが入力します。
利用時間Mを30で割って切り上げることで、実際に何回の30分単位が利用されたかを計算します。この数にXをかけることで、支払うべき利用料金を計算します。
最後に、計算された支払い金額を出力します。
'''

# D277　残りの枚数
# utf-8
n = int(input())
m = int(input())
print(n-m)

# D278　徒歩何分
# utf-8
X = int(input())
print(X//80)

# D279　積雪の深さ
# utf-8
A,B = map(int,input().split())
print(A + B)

# D280　時給と勤務時間
# utf-8
W, M = map(int, input().split())  # 時給を表す整数 W と分単位の勤務時間 M
print(int(M / 60 * W))  # 分単位の勤務時間を浮動小数点数に変換してから60で割り、整数に変換して給与を計算
'''
この与えられた時給（W）と勤務時間（M）から給与を計算するものです。
最初の行では、input() 関数を使って入力を受け取ります。input() 関数はユーザーからの入力を文字列として受け取ります。split() メソッドは、受け取った文字列を空白文字（スペース）で分割し、それぞれの部分をリストに格納します。
map(int, ...) 関数は、リストの各要素を整数に変換します。map() 関数を使って、分割された文字列を整数に変換します。そして、W と M という変数にそれぞれ代入します。ここで、W は時給を、M は勤務時間を表します。
最後の行では、給与を計算して出力します。M を60で割って、勤務時間を時間単位に変換し、その時間に時給 W を掛けて給与を計算します。計算結果を print() 関数で出力します。ただし、給与は整数であるため、計算結果を int() 関数で整数に変換してから出力します。
'''

---------------------------------------------D281　※欠番 ◆
# D281　目標カロリー
# utf-8
X = int(input())
Y_1,Y_2,Y_3 = map(int,input().split())

if (Y_1 + Y_2 + Y_3) < X:
    print("OK")
else:
    print("NG")

# D282　ティッシュ箱の収納
# utf-8
N = int(input()) # ティッシュ箱の高さ
M = int(input()) # 収納するスペースの高さ

print(M//N)

# D283  ポイント払い
# utf-8
X,P = map(int, input().split()) # カートに入った商品の合計金額を表す整数 X  ポイントカードに貯まったポイント P 

if X >= P:
    print(X-P)
else:
    print(0)

# D284　風速の計測
# utf-8
w = int(input())
if w >= 8:
    print("OK")
else:
    print("NG")

# D285　本のページ
# utf-8
import math

# 入力を受け取る
N = int(input())  # 本のページ数
a = int(input())  # 1日の読書ペース

# 必要な日数を計算して出力
days_needed = math.ceil(N / a)
print(days_needed)
'''
与えられた本のページ数と1日の読書ペースから、本を読み終わるまでに必要な日数を計算します。
まず、import mathを使ってPythonのmathモジュールをインポートします。これは、切り上げを行うためのmath.ceil()関数を使用するためです。
次に、N = int(input())とa = int(input())を使って、入力を受け取ります。最初のinput()は本のページ数を受け取り、int()を使って整数に変換しています。同様に、2番目のinput()は1日の読書ペースを受け取り、整数に変換しています。
その後、days_needed = math.ceil(N / a)を使って、本を読み終わるまでに必要な日数を計算します。これは、与えられた本のページ数を1日の読書ペースで割り、切り上げを行うことで必要な日数を求めます。例えば、100ページの本を1日に11ページずつ読む場合、必要な日数はmath.ceil(100 / 11)で計算され、約9.09日となりますが、切り上げを行うことで10日となります。
最後に、print(days_needed)を使って必要な日数を出力します。
'''

# D286  テストの採点
# utf-8
X,T = map(int,input().split())
print((60*T)//X)

# D287 安いお弁当
# utf-8
A,B = map(int,input().split())
if (A < (B*7)//10):
    print(A)
else:
    print((B*7)//10)

# D288 バッテリー残量
# utf-8
n = int(input())
if(n <= 10):
    print("low")
else:
    print(n)

# D289 花の種
# utf-8
'''
必要な種の個数 n と種 1 つあたりの値段 p
'''

n = int(input())
p = int(input())
print(n*p)

# D290 表示される文字
# utf-8
def main():
    import sys
    input = sys.stdin.read().strip()
    
    # 文字列の長さを取得
    length = len(input)
    
    # 10文字を超える場合は超えた文字数を計算
    if length > 10:
        print(length - 10)
    else:
        print(0)

if __name__ == "__main__":
    main()
'''
sys.stdin.read().strip() を使って標準入力から文字列を読み込みます。このとき、末尾の改行を除去します。
入力文字列の長さを計算します。
文字列の長さが10を超えている場合、超えた文字数（length - 10）を出力します。10以内の場合は0を出力します。
例えば、programming を入力すると、出力は 1 となります。 paiza を入力すると、出力は 0 になります。
'''

---------------------------------------------D291　※欠番 ◆
# D291 詰め替え
# utf-8
# 詰め替えるための容器の容量 x ミリリットルと購入する詰め替えの量 y ミリリットル
x = int(input())
y = int(input())

print(y//x)
print(y%x)

# D292 梅雨入り
# utf-8
def is_tsuyu(rainfall):
    rainy_days = 0
    for day in rainfall:
        if day == "Rain":
            rainy_days += 1
    if rainy_days >= 4:
        return "Yes"
    else:
        return "No"

# 入力を受け取る
rainfall = []
for _ in range(7):
    day_weather = input().strip()
    rainfall.append(day_weather)

# 梅雨入りを判定して出力
print(is_tsuyu(rainfall))
'''
is_tsuyu 関数:
この関数は、引数として雨の降った日のリストを受け取り、その日数が4日以上かどうかを判定します。
関数は、雨の日数をカウントして、4日以上ならば "Yes" を、そうでなければ "No" を返します。
入力処理:
7日間の天気を記録するためのリスト rainfall を作成します。
input() 関数を使って、7行分の天気情報をユーザーから受け取り、それぞれの行を rainfall リストに追加します。
strip() メソッドを使って、各行の末尾の改行文字を削除します。
梅雨入りの判定:
is_tsuyu() 関数に rainfall リストを渡して、梅雨入りを判定します。
関数は、4日以上雨が降った場合に "Yes" を返し、そうでなければ "No" を返します。
出力:
判定結果を出力します。
'''

# D293 ネジの補充
# utf-8
#必要なネジの本数 n と現在の在庫本数 m
n = int(input())
m = int(input())
print(n-m)

# D294 キャベツの値段
# utf-8
'''
キャベツは 1 玉と 1/2 玉で販売されています。
どちらで買うか迷ったあなたはひとまず 1 玉あたりにするといくら高いのかを求めることにしました。
キャベツ 1 玉の値段 n とキャベツ 1/2 玉の値段 m が改行区切りで与えられるので 1/2 玉を 1 玉分買った場合に 1 玉の値段 m に対していくら高いかを出力してください。

'''
n = int(input())  # キャベツ 1 玉の値段 n 
m = int(input())  # キャベツ 1/2 玉の値段 m 

if n < (m*2): # キャベツ1玉のほうが安いとき
    print((m*2)-n)

# D295 田んぼの管理
# utf-8
n = int(input())
m = int(input())
print(n*m)

# D296 同じ文字
# utf-8
# 整数 n とある 1 文字 c 
n = int(input())
c = input()

print(c*n)

# D297 海開き
# utf-8
c_1 = int(input())
c_2 = int(input())
c_3 = int(input())

if c_1 >= 20 and c_2 >= 20 and c_3 >= 20:
    print("OK")
else:
    print("NG")

# D298 モンスターの図鑑
# utf-8
n = int(input()) #モンスターの種類 n 
m = int(input()) #捕まえたモンスターの種類 m
print(n-m)

# D299 原稿用紙
# utf-8
# 1 列が N 字で、 C 列ある原稿用紙
N, C = map(int,input().split())

print(N*C)

# D300 お釣りの計算
# utf-8
# 買い物の合計金額 n 円と支払った額 m 円
n = int(input())
m = int(input())
print(m-n)

---------------------------------------------D301　※欠番 ◆
# D301 焼きそばパン
X = input() # 料理名
print(X + "pan")

# D302 タクシー料金
# utf-8
D,K = map(int,input().strip().split()) # タクシーの走行距離 D と運賃 K 円

# 初乗り運賃
fare = 500

# もし走行距離が3kmを超えるなら、追加の運賃を計算する
if D > 3:
    fare += (D - 3) * K

# 結果を出力
print(fare)
'''
input().strip().split()で入力をスペースで分割し、map(int, ...)でそれぞれを整数に変換しています。
初乗り運賃として500円を設定しています。
走行距離が3kmを超える場合、超えた距離に対して追加の運賃を計算して加算しています。
最後に、合計運賃を出力しています。
'''

# D303 1日の降水量
# utf-8
# 1 時間あたりの降水量 n が与えられるので 24 時間の降水量を 24 × n として計算
n = int(input())
print(24*n)

# D304 お米を炊く
# utf-8
# お米を炊くために必要な水の量は重さの 1.4 倍
D = int(input())
print(int(D*1.4)) # 型変換

# D305 調理時間
# utf-8
# お湯を沸かす時間 n 分とお湯を注いでからカップラーメンができるまでの時間 m 分
n = int(input())
m = int(input())
print(n+m)

# D306 温め時間
# utf-8
'''
あなたが務めるコンビニではお弁当は常に10℃で管理されています。
また、コンビニの電子レンジではお弁当を1秒につき1℃温めることができます。
'''
T = int(input()) #  お客さんが要望するお弁当の温度を表す整数 
if T > 10:
    print(T-10)
else:
    print(0)

# D307 徒歩何分
# utf-8
# 徒歩では 1 分あたり 80 m 進むとし移動する距離 n が与えられる
n = int(input())
print(n// 80)

# D308 旅費の計算
# utf-8
A, B = map(int, input().split())
print(A+B)

# D309 スタミナ回復
# utf-8
# ゲームを遊ぶにはスタミナが必要で、スタミナは X 分ごとに 1 回復します。スタミナを貯めておける上限は 100 です。
X = int(input())
N = int(input())

# スタミナが100になるまでに必要な時間を計算
if N >= 100:
    print(0)  # スタミナがすでに100なら0分
else:
    # 必要なスタミナを回復するのにかかる時間を計算
    needed_time = (100 - N) * X
    print(needed_time)

# D310 タイトルの略称
# utf-8
s_1 = input()
s_2 = input()
s_3 = input()

print(s_1[0] + s_2[0] + s_3[0])

---------------------------------------------D311　※欠番 ◆
# D311 チョコレートの数
# utf-8
A, B = map(int, input().split())
print(B//A)

# D312 同じ長さ
# utf-8
A = input().strip()
B = input().strip()

if len(A) == len(B):
    print("Yes")
else:
    print("No")
'''
入力された文字列には改行や前後の空白が含まれている可能性があるため、strip() メソッドを使ってそれらを取り除くのが良いです。
'''

# D313 所持金の合計
# utf-8
a = int(input())
b = int(input())
print(a+b)

# D314 コピー用紙の枚数
# utf-8
# 資料は n ページあり m 部を印刷する必要があります
n = int(input())
m = int(input())
print(n*m)

# D315 実験の用意
# utf-8
# 総量が n ミリリットルの薬品を a ミリリットルずつ取り分けた残量
n = int(input())
a = int(input())

print(n%a)

# D316 最低気温
# utf-8
def main():
    import sys
    input = sys.stdin.read
    
    # 標準入力を行ごとにリスト化
    lines = input().strip().split("\n")
    
    # 入力を整数に変換
    temperatures = list(map(int, lines))
    
    # 最低気温を取得
    min_temperature = min(temperatures)
    
    # 結果を出力
    print(min_temperature)

if __name__ == "__main__":
    main()
'''
1日の6時間ごとの気温データ（4つの値）が標準入力から与えられた場合に、その中で最も低い気温を求めて出力します。
標準入力（sys.stdin.read）を用いて、改行区切りで与えられた4行の気温データを一括で取得します。入力データは文字列として扱われるため、strip()で末尾の余分な改行を削除し、split("\n")で改行を基準に分割します。これにより、気温データがリスト形式になります。
各要素は文字列のため、map(int, lines)を使って整数型に変換します。これにより、演算が可能になります。Pythonの組み込み関数min()を使い、リストの中から最も小さい値を取得します。
最低気温の値を出力します。余計な文字や空行を含めないために、単純にprint()で値のみを出力します。
'''

# D317 文字列の一致
# utf-8
s_1 = input()
s_2 = input()

if s_1 == s_2:
    print("Yes")
else:
    print("No")

# D318 ツリーの用意
# utf-8
n = int(input())
m = int(input())
print(n*m)

# D319 短縮表記
# utf-8
S = input()
print(S[0:3])

# D320 クリスマスのケーキ
# utf-8
n = int(input())
if n % 6 == 0:
    print(n//6)
else:
    print((n//6)+1)
    
---------------------------------------------D321　※欠番 ◆
# D321 お年玉の用意
# utf-8
# お年玉は 1000 円札で用意することにしました。 n 枚の 1000 円札を用意し m 袋のお年玉袋を用意しました。
n = int(input())
m = int(input())
print((1000*n)%(1000*m))

# D322 成人の年齢
# utf-8
#成人年齢 18 歳以上の場合は "Yes" 、未満の場合は "No" とする

n = int(input())
if n >= 18:
    print("Yes")
else:
    print("No")

# D323 餅つきの用意
# utf-8
# もち米 1 合あたり 3 個の丸めたお餅を作ることができます。 n 合のもち米を用意したとき何個の丸めたお餅ができるか

n = int(input())
print(n*3)

# D324　節分の豆と年齢
# utf-8
n = int(input())
print(100-n)

# D325　名前の結合
# utf-8
a = input()
b = input()
print(a + b)

# D326　縦書きの文字列
# utf-8
S = input().strip()  # 標準入力から文字列を取得し、余計な空白を除去
for char in S:
    print(char)  # 1文字ずつ出力
'''
input().strip() を使って 標準入力 から S を受け取る。
strip() を使うことで、末尾の不要な改行を削除。
for ループで S の各文字を1つずつ取り出して print(char) で出力。
print() はデフォルトで改行されるため、1文字ずつ縦に出力 される。
'''

# D327 チョコを分ける
# utf-8
n = int(input()) # チョコの個数
m = int(input()) # 配る人数

print(n%m)

# D328 カロリーの摂取量
# utf-8
# 1 日の摂取カロリー n が目標の摂取カロリー m 未満であれば "OK" と出力し m 以上であれば "OVER" と出力してください。
n = int(input())
m = int(input())

if n < m:
    print("OK")
else:
    print("OVER")

# D329 商品名の表記
# utf-8
s = input()
p = input()

print(s + "("+ p + ")")

# D330 燃料の計算
# utf-8
# 1日に n リットルの燃料を消費します。 m 日分で何リットルになるか
n = int(input())
m = int(input())
print(n*m)

---------------------------------------------D331　※欠番 ◆
# D331 ファイル名の変更
# utf-8
def replace_space_with_underscore(s: str) -> str:
    return s.replace(" ", "_")

# 入力を受け取る
s = input().strip()
# 変換して出力
print(replace_space_with_underscore(s))

# D332 セット割引
# utf-8
# p 円の食べ物と q 円の飲み物を頼んだ時に合計金額が 1000 円以上の場合に 100 円引きされます。
p = int(input())
q = int(input())

if (p + q) >= 1000:
    print(p+q-100)
else:
    print(p+q)
    
# D333 さくらの花びら
# utf-8
n = int(input())
print(n*5)

# D334　1週間の食費
# utf-8
costs = []

for _ in range(7):
    cost = int(input())
    costs.append(cost)

total = 0
for c in costs:
    total += c

print(total)
'''
map 関数の使い方として、map(関数, イテラブル) という形が正しいです。list() は引数を1つだけ受け取ります。
cost はリストや map オブジェクトなので、数値の加算になっていません。i に対して処理するべきです（for i in cost: としているなら、sum += i にする）。
sum は Python の組み込み関数（sum()）と同じ名前であるため、関数を上書きしてしまうリスクがあります。小規模コードではすぐに問題にはなりませんが、推奨されない書き方です。
'''

# D335 串団子
# utf-8
'''
n 本の串を用意し、 串 1 本ごとに m 個ずつ団子を刺した場合に何個の団子が必要か
'''
n = int(input())
m = int(input())
print(n*m)

# D336 レジの列
# utf-8
n = int(input())
m = int(input())
print(n+m+1)

# D337 最高気温
# utf-8
t_1 = int(input())
t_2 = int(input())
t_3 = int(input())

print(max(t_1,t_2,t_3))

# D338 値上げの額
# utf-8
p = int(input())
q = int(input())
print(q-p)

# D339 トイレットペーパーの在庫
# utf-8
'''
残りが n ロール以下になった時に m ロール買い足します。
買い足す基準のロール数 n 、買い足すロール数 m 、現在のロール数 x
'''
n = int(input())
m = int(input())
x = int(input())

if x <= n:
    print(x + m)
else:
    print(x)

# D340 運搬のコスト
# utf-8
p = int(input())
n = int(input())

print(p*n)

---------------------------------------------D341　※欠番 ◆
# D341 収穫の時期
# utf-8
d_1 = int(input())
d_2 = int(input())
d_3 = int(input())

# 税所に収穫できるのは日数の最小値
print(min(d_1,d_2,d_3))

# D342 湿度の管理
# utf-8
h = int(input())

if h > 60:
    print("NG")
else:
    print("OK")

# D343 N文字目まで
# utf-8
L = int(input())  # 文字列 S の長さ
S = input()       # 文字列 S
N = int(input())  # 出力する範囲 N（1文字目からN文字目まで）

print(S[:N])      # 文字列の先頭からN文字目までを出力
'''
S[:N] は、「インデックス0からN-1まで」を切り取るスライス構文で、Pythonらしい優雅さの象徴。
L を読み取る理由は、問題のフォーマット上必要
'''

# D344 ボーナスの額
# utf-8
n = int(input())
m = int(input())

print(n*m)

# D345 気温の計測
# utf-8
a = int(input())
b = int(input())
c = int(input())
print(max(a,b,c))

# D346 ペットの餌
# utf-8
m = int(input())
n = int(input())
print(m%n)

# D347 再配達の時間
# utf-8
n = int(input())
m = int(input())

if n > m:
    print("OK")
else:
    print("NG")

# D348
# D349
# D350
