<3項間漸化式>
step1　2項間漸化式1
# utf-8
x, d, k = map(int, input().split())

a = [x] * (k + 1)

for i in range(2, k + 1):
    a[i] = a[i - 1] + d

print(a[k])
'''
数列の各項の値を保存する1次元配列を用意し、for 文等のループを利用して a_2 から順に漸化式に従って計算していけばよいです。
'''

step2　2項間漸化式2
# utf-8
x, d = map(int, input().split())

a = [x] * (1000 + 1)

for i in range(2, 1000 + 1):
    a[i] = a[i - 1] + d

q = int(input())

for i in range(q):
    k = int(input())
    print(a[k])
'''
k_i を入力として受け取る度に a_{k_i} の値をいちいち求める必要はありません。あらかじめ a_1 から a_1000 までの値を求めておき、各 k_i に対して求めておいた a_{k_i} をそのまま出力すればよいです。
よって、まずは数列の各項の値を保存する1次元配列を用意し、for 文等のループを利用して a_2 から a_1000 まで順に漸化式に従って計算します。
そして、k_i を入力として受け取り a_{k_i} を出力することを Q 回繰り返せばよいです。
'''

step3　特殊な2項間漸化式1
step4　特殊な2項間漸化式2
step5　3項間漸化式1
final　3項間漸化式2

<階段の上り方>
step1　階段の上り方1
step2　階段の上り方2
final  階段の上り方3

<最安値>
step1　最安値を達成するには1
step2　最安値を達成するには2
step3　最安値を達成するには3
final　最安値を達成するには4

<連続列>
step1　最長増加連続部分列
final　最長減少連続部分列

<最長減少部分列>
step1　最長部分増加列
final　最長減少部分列
