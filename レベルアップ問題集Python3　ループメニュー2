<偶奇の判定>
step1　未知数個の数の受け取り
# utf-8
a = list(map(int, input().split()))

i = 0
while True:
    print(a[i])
    if a[i] == -1:
        break
    i += 1
    
'''
リストとして 1 行で受け取り、1 つずつ for 文を用いて出力します。
'''

step2　未知数個の文字列の受け取り
# utf-8
s = list(input().split())

i = 0
while True:
    print(s[i])
    if s[i] == "EOF":
        break
    i += 1
    
step3　奇数だけ出力
# utf-8
N = int(input())
a = list(map(int, input().split()))

for i in range(N):
    if a[i] % 2 == 1:
        print(a[i])
        
step4　割り切れる数だけ出力
# utf-8
N = int(input())
a = list(map(int, input().split()))

for i in range(N):
    if a[i] % 3 == 0:
        print(a[i])
        
final　偶奇の判定
# utf-8
N = int(input())
a = list(map(int, input().split()))

for i in range(N):
    if a[i] % 2 == 0:
        print("even")
    elif a[i] % 2 == 1:
        print("odd")

<約数の列挙>
step1　 各桁の和
# utf-8
N = int(input())

digit_sum = 0
while N > 0:
    digit_sum += N % 10
    N //= 10

print(digit_sum)

step2　 カウント変数を使った計算
# utf-8
N = int(input())
M = list(map(int, input().split()))

for i in range(N):
    print(M[i] * (i + 1))
    
step3　 2で何回割れる？
# utf-8
N = int(input())

div_count = 0
while True:
    if N % 2 == 0:
        N //= 2
        div_count += 1
    else:
        break

print(div_count)

'''
Python の場合、While True: と記述することで永遠にループを回すことができます。
N が 2 で割れなくなった場合に breakすることで無限ループからブレイクする。
'''

step4　 任意の数で何回割れる？
# utf-8
N, M = map(int, input().split())

div_count = 0
while True:
    if N % M == 0:
        N //= M
        div_count += 1
    else:
        break

print(div_count)
'''
Python の場合、While True: と記述することで永遠にループを回すことができます。
N が M で割れなくなった場合に breakすることで無限ループからブレイクするようにしましょう。
'''
step5　 10進数から2進数に変換
# utf-8
N = int(input())

print(bin(N)[2:])

step6　 10進数からM進数に変換
step7　 NがMずつ増えたときにいつKを越える？
step8　 毎日増加するお金
step9　 階乗の計算
step10　階乗の末尾に0はいくつ付く？
step11　加算された数列の最大値
step12　加算された数列の最小値
step13　1はどこにある？
step14　約数の個数
final　 約数の列挙
